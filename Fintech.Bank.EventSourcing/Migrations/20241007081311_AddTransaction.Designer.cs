// <auto-generated />
using System;
using Fintech.Bank.EventSourcing;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Fintech.Bank.EventSourcing.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241007081311_AddTransaction")]
    partial class AddTransaction
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Fintech.Bank.EventSourcing.Features.CreateBankAccount.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("account_number");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric")
                        .HasColumnName("balance");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.HasKey("Id")
                        .HasName("pk_accounts");

                    b.ToTable("accounts", (string)null);
                });

            modelBuilder.Entity("Fintech.Bank.EventSourcing.Features.CreateTransaction.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric")
                        .HasColumnName("amount");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("FromId")
                        .HasColumnType("uuid")
                        .HasColumnName("from_id");

                    b.Property<Guid>("ToId")
                        .HasColumnType("uuid")
                        .HasColumnName("to_id");

                    b.HasKey("Id")
                        .HasName("pk_transactions");

                    b.HasIndex("FromId")
                        .HasDatabaseName("ix_transactions_from_id");

                    b.HasIndex("ToId")
                        .HasDatabaseName("ix_transactions_to_id");

                    b.ToTable("transactions", (string)null);
                });

            modelBuilder.Entity("Fintech.Bank.EventSourcing.Features.CreateTransaction.Transaction", b =>
                {
                    b.HasOne("Fintech.Bank.EventSourcing.Features.CreateBankAccount.Account", "From")
                        .WithMany()
                        .HasForeignKey("FromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_transactions_accounts_from_id");

                    b.HasOne("Fintech.Bank.EventSourcing.Features.CreateBankAccount.Account", "To")
                        .WithMany()
                        .HasForeignKey("ToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_transactions_accounts_to_id");

                    b.Navigation("From");

                    b.Navigation("To");
                });
#pragma warning restore 612, 618
        }
    }
}
